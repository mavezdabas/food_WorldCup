p3 <- pt(abs(t), n-1, lower.tail=FALSE)*2
cat('xbar=', xbar, '; s=', s, '; se=', se, '\n')
cat('thres=', thres, '; t=', t, '; confidence interval=', ci, '\n')
cat('p-value (=p1=p2=p3) =', p1, p2, p3, '\n')
new.p <- Inf; ns <- 1
pvals <- nvals <- NULL
aplha <- 0.01
while (new.p > alpha & ns < 10000) {
ns <- ns + 1
new.se <- s/sqrt(ns)
new.t <- (xbar-mu)/new.se
new.p <- pt(-abs(new.t), ns-1)*2
pvals <- c(pvals, new.p)
nvals <- c(nvals, ns)
}
ns
data.resample <- c(7, 6, 6, 4, 4, 8, 4, 7, 6, 6, 7)
alpha <- 0.05
data.test <- data.resample - data
# data.test <- data - data.resample
data.test;sum(data.test)
xbar <- mean(data.test);xbar
s <- sd(data.test);s
se <- s / sqrt(n);se
t <- xbar / se;t
p.value <- pt(-abs(t), n-1)*2;p.value
# cat('xbar=', xbar, '; se=', se, '; t=', t, '; p.value=', p.value, '; alpha=', alpha, '\n
if (p.value < alpha) { msg <- 'DO'} else { msg <- 'DO NOT' }
msg
rm(list = ls())
matrix(0,0,1,1,nrow = 4,ncol = 4)
matrix(c(0,0,1,1),nrow = 4,ncol = 4)
?matrix()
data_M <- c(0,0,0.5,0.5,0,0)
matrix(data = data_M,nrow = 4,ncol = 4)
matrix(data = data_M,nrow = 1,ncol = 6)
data_M <- c(0,0,0.5,0.5,0,0,0,0,1,0,0,0)
matrix(data = data_M,nrow = 2,ncol = 6)
data_M <- c(0,0,0,0.5,0,0,0,0,0.25,0,0,1,0.5,1,0,0,0,0,0.5,0,0.25,0.5,0,0,0,0,0.25,0,0,0,0,0,0.25,0,1,0)
matrix(data = data_M,nrow = 2,ncol = 6)
matrix(data = data_M,nrow = 6,ncol = 6)
data_M1 <- c(1/6)
SurfM <- matrix(data = data_M1,nrow = 6,ncol = 6);SurfM
PageRank_Score <- 0.8%*%data_M + 0.2%*%data_M1;PageRank_Score
PageRank_Score <- 0.8*data_M + 0.2*data_M1;PageRank_Score
read.table("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 3/Data Mining/Ass5/u.data")
question_2 <- read.table("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 3/Data Mining/Ass5/u.data")
View(question_2)
colnames(question_2) <- c("user_id","item_id","rating","timestamp")
question_2$
question_2 <- question_2[,1:3]
unique(question_2$user_id)
unique(question_2$item_id)
count(unique(question_2$item_id))
(unique(question_2$item_id))
(unique(question_2$user_id))
(unique(question_2$rating))
range(question_2$user_id)
range(question_2$item_id)
is.na(question_2$user_id)
sum(is.na(question_2$user_id))
sum(is.na(question_2$item_id))
head(question_2)
DF <- data.frame(a = 1:3, b = letters[10:12],
c = seq(as.Date("2004-01-01"), by = "week", len = 3),
stringsAsFactors = TRUE)
DF
data.matrix(DF[1:2])
data.matrix(DF)
DF <- data.frame(a = 1:3, b = letters[10:12])
DF
data.matrix(DF[1:2])
qu <- data.matrix(question_2)
View(qu)
rm(DF)
qu <- data.matrix(question_2[3])
View(qu)
qu <- data.matrix(question_2[1,3])
qu <- data.matrix(question_2[3])
as.matrix(sapply(question_2, as.numeric))
qu <- as.matrix(sapply(question_2, as.numeric))
rm(qu)
library(recommenderlab)
library(reshape2)
library(ggplot2)
acast(question_2,question_2$user_id ~ question_2$item_id)
questMatrix <- acast(question_2,question_2$user_id ~ question_2$item_id)
View(questMatrix)
class(questMatrix)
questMatrix <- as.matrix(questMatrix)
class(questMatrix)
question_2$user_id == 1
library(dplyr)
filter(question_2,question_2$user_id == 1)
filter(question_2,question_2$user_id == 2)
filter(question_2,question_2$user_id == 2 & question_2$item_id == 1)
filter(question_2,question_2$user_id == 2 & question_2$item_id == 2)
Recommender()
Recommender
showMethods("Recommender")
showMethods("Recommender")
questMatrix[is.na(questMatrix)] <- 0
source('~/RWorkingDirectory/Priya_Analyiss.R', echo=TRUE)
library(shiny)
library(shinydashboard)
library(httr)
library(leaflet)
library(leaflet)
library(dplyr)
library(ggmap)
library(geosphere)
library(geosphere)
library(rmongodb)
library(rmongodb)
library(rmongodb)
library(rmongodb)
library(geosphere)
library(data.table)
library(scales)
library(scales)
library(plotly)
library(plotly)
library(tidyr)
library(tidyr)
library(lazyeval)
library(shinyjs)
library(shinyjs)
install.packages("shinyjs")
install.packages("shinyjs")
library(shinyjs)
library(shinyjs)
library(shinyjs)
library(shinyGlobe)
library(shinyGlobe)
install.packages("shinyGlobe")
install.packages("shinyGlobe")
library(mongolite)
install.packages("mongolite")
library(mongolite)
shiny::runApp('Desktop/Shiny_Portfolio/client')
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
View(classData)
colnames(classData)
dim(classData)
summary(classData)
filter(classData,classData$Response.ID == "R_3meG96nGsljaD5J")
dplyr::filter(classData,classData$Response.ID == "R_3meG96nGsljaD5J")
View(dplyr::filter(classData,classData$Response.ID == "R_3meG96nGsljaD5J"))
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
View(dplyr::filter(classData,classData$Response.ID == "R_3meG96nGsljaD5J"))
library(ggplot2)
library(ggplot2)
plot(classData$Q34...What.time.do.you.typically.go.to.bed.at.night.,classData$Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
summary(classData)
hist(classData$Q34...What.time.do.you.typically.go.to.bed.at.night.,classData$Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
hist(classData$Q34...What.time.do.you.typically.go.to.bed.at.night.,classData$Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
plot(classData$Q26...Which.is.your.preferred.OS.,classData$Q27...Which.is.your.preferred.mobile.OS.)
plot(classData$Q27...Which.is.your.preferred.mobile.OS.,classData$Q26...Which.is.your.preferred.OS.)
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
summary(classData)
unique(classData$Q25_4...Country)
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
summary(classData)
library(ggplot2)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large")
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large"))
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium"))
library(knitr)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(1)
library(magrittr )
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(1)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23)
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium"))
colnames(classData)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
aggregate(classData$Hours.Sleep)
aggregate(classData$Hours.Sleep,FUN = mean())
aggregate(classData, by=list(classData$Hours.Sleep,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...),
FUN=mean, na.rm=TRUE)
aggregate(classData, by=list(classData$Hours.Sleep,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...),
FUN=mean, na.rm=FALSE)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(classData$Hours.Sleep), sd=sd(classData$Hours.Sleep))
mean(classData$Hours.Sleep)
typeof(classData$Hours.Sleep)
mean(classData$Hours.Sleep)
mean(classData$Hours.Sleep,na.rm = TRUE)
mean(classData$Hours.Sleep,na.rm = FALSE)
mean(classData$Hours.Sleep)
(classData$Hours.Sleep)
mean(as.integer(classData$Hours.Sleep))
classData$Hours.Sleep <- as.integer(classData$Hours.Sleep)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(classData$Hours.Sleep))
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
typeof(classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
mean(as.integer(classData$Hours.Sleep))
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... <- as.character(classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
colnames(classData)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::select(23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::group_by(classData_2, classData_2$CupSize)
typeof(classData_2$CupSize)
as.factor(classData_2$CupSize)
classData_2$CupSize <- as.factor(classData_2$CupSize)
dplyr::group_by(classData_2, classData_2$CupSize)
View(classData_2)
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::group_by(classData_2, classData_2$CupSize)
classData_2 <- na.omit(classData_2)
dplyr::group_by(classData_2, classData_2$CupSize)
classData_2$CupSize
typeof(classData_2$CupSize)
classData_2$CupSize <- as.factor(classData_2$CupSize)
dplyr::group_by(classData_2, classData_2$CupSize)
colnames(classData_2)
aggregate(NumberOfCups ~ Hours.Sleep, data=classData_2, function(x) {sum(is.na(x))}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {sum(is.na(x))}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
filter(classData_2,classData_2$CupSize="Large")
filter(classData_2,classData_2$CupSize=="Large")
filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...=="Large")
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large")
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
dplyr::select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
dplyr::select(23,16,15) %>% mean(Hours.Sleep)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
eaggregate(Hours.Sleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup <- aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large"))
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
classData_2 <- na.omit(classData_2)
View(classData_2)
dplyr::group_by(classData_2, classData_2$CupSize) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
summary(classData_2)
classData_2$Hours.Sleep
typeof(classData_2$Hours.Sleep)
as.character(classData_2$Hours.Sleep)
as.integer(classData_2$Hours.Sleep)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dplyr::group_by(classData_2, classData_2$CupSize) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
levels(droplevels(classData_2$Hours.Sleep))
mean(levels(droplevels(classData_2$Hours.Sleep)))
stringsAsFactors=FALSE
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
mean(classData_2$Hours.Sleep)
mean(as.character(classData_2$Hours.Sleep))
mean(as.character.Date(classData_2$Hours.Sleep))
library(chron)
times(classData_2$Hours.Sleep)
ch <- times(classData_2$Hours.Sleep)
60 * hours(ch) + minutes(ch)
classData_2$minutesSleep <- 60 * hours(ch) + minutes(ch)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup <- aggregate(minutesSleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup
500/60
dplyr::mutate(dataCup,Hours_Sleep = dataCup$minutesSleep/60 )
View(dataCup)
dataCup <- dplyr::mutate(dataCup,Hours_Sleep = dataCup$minutesSleep/60 )
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
round(dataCup$minutesSleep/60 )
round(dataCup$minutesSleep/60,2)
dataCup <- dplyr::mutate(dataCup,Hours_Sleep = round(dataCup$minutesSleep/60,2))
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
aggregate(minutesSleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
max(classData_2$NumberOfCups)
(aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)%>%)
dataCup_2 <-aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
(dataCup_2$minutesSleep/60)
colnames(classData)
classData_3 <- dplyr::select(classData,34,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
dplyr::select(classData,34,23,16,15)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
View(classData_3)
classData_3 <- na.omit(classData_3)
times(classData_3$Hours.Sleep)
ch_1 <- times(classData_3$Hours.Sleep)
classData_3$SleepMinute <- 60 * hours(ch_1) + minutes(ch_1)
colnames(classData_3)
dataCup_1 <- aggregate(SleepMinute ~ NumberOfCups, data=classData_3, function(x) {mean(x)}, na.action = NULL)
View(dataCup_2)
dataCup_1 <- dplyr::mutate(dataCup,Hours_Sleep = round(dataCup_1$SleepMinute/60,2))
dataCup_1 <- dplyr::mutate(dataCup_1,Hours_Sleep = round(dataCup_1$SleepMinute/60,2))
View(dataCup_1)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
classData_3 <- na.omit(classData_3)
ch_1 <- times(classData_3$BedTime)
classData_3$SleepMinute <- 60 * hours(ch_1) + minutes(ch_1)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
hist(classData_3$NumberOfCups)
plot(classData_3$NumberOfCups,classData_3$BedTime)
View(classData)
View(dataCup_1)
colnames(classData)
View(classData)
summary(classData)
rm(list = ls())
library(dplyr)
shiny::runApp('Desktop/New_Stuff/NEU/Semester 4/Information Visualization/Project_Food/food-world-cup/food_WorldCup')
runApp('Desktop/New_Stuff/NEU/Semester 4/Information Visualization/Project_Food/food-world-cup/food_WorldCup')
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
setwd("~/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/Project_Food/food-world-cup/food_WorldCup")
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
topFood <- foodData %>%
dplyr::select(Level_of_knowledge,
Interested_cuisines_world,Household_Income,Age,
Location,Education,Gender,United_States,Mexico,Italy,
China,Japan,England,France,Germany,India,Greece,Thailand)
levels(topFood$Age)
runApp()
ageTable <- as.data.frame(table(tableRendered$Age))
colnames(ageTable) <- c("Age","Number")
ageTable
plot_ly(ageTable, labels = ~Age, values = ~Number, type = 'bar') %>%
layout(xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(ageTable, labels = ~Age, values = ~Number, type = 'bar')
ageTable
runApp()
runApp()
runApp()
region_TopFood <- topFood %>%
dplyr::group_by(Location) %>%
dplyr::summarise(American = round((mean(United_States == 5,na.rm = TRUE))*100,2),
Mexican = round((mean(Mexico == 5,na.rm = TRUE))*100,2),
Italian  = round((mean(Italy == 5,na.rm = TRUE))*100,2),
Chinese = round((mean(China == 5,na.rm = TRUE))*100,2),
Japnese   = round((mean(Japan == 5,na.rm = TRUE))*100,2),
English  = round((mean(England == 5,na.rm = TRUE))*100,2),
Frencch  = round((mean(France == 5,na.rm = TRUE))*100,2),
German = round((mean(Germany == 5,na.rm = TRUE))*100,2),
Indian = round((mean(India == 5,na.rm = TRUE))*100,2),
Greece  = round((mean(Greece == 5,na.rm = TRUE))*100,2),
Thai = round((mean(Thailand == 5,na.rm = TRUE))*100,2))
region_TopFood_Max <- region_TopFood %>%
dplyr::select(-1)
region_TopFood$Best <- colnames(region_TopFood_Max)[apply(region_TopFood_Max,1,which.max)]
region_TopFood$BestPercentage <- apply(region_TopFood_Max,1,max)
region_TopFood <- region_TopFood[1:9,]
rm(region_TopFood_Max)
colnames(region_TopFood)
runApp()
seq(5,60,by = 6)
seq(5,60,break = 6)
seq(5,60)
seq(5,60,break = 10)
seq(5,60,by = 10)
seq(5,65,by = 10)
seq(5,6,by = 10)
seq(5,60,by = 10)
View(region_TopFood)
seq(5,60,by = 5)
runApp()
runApp()
topFood
colnames(topFood)
runApp()
bestCuisine <- region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location = "Pacific") %>%
dplyr::select(Best)
region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location = "Pacific") %>%
"Chinese" ,"Japnese" ,
region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location = "Pacific")
region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location == "Pacific")
bestCuisine <- region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location == "Pacific")
View(bestCuisine)
bestCuisine <- region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location == "Pacific") %>%
dplyr::select(Best)
View(bestCuisine)
bestP <- region_TopFood %>%
dplyr::filter(Location == "East North Central" | Location == "Pacific") %>%
dplyr::select(BestPercentage)
View(bestP)
bestCuisine$Best
bestP$BestPercentage
runApp()
runApp()
rep(bestP$BestPercentage,length(stateAbb))
length(rep(bestP$BestPercentage,length(stateAbb)))
length(stateAbb)
bestP
bestP[1]
bestP[1,1]
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
lakecolor = toRGB('white')
)
plot_ly(z = rep(bestP$BestPercentage[1,1],length(stateAbb)),
text = ~hover,
locations =  stateAbb,
type = 'choropleth',
colors = 'Purples',
showscale = FALSE,
locationmode = 'USA-states') %>%
layout(geo = g,title = 'Best Rated Cuisine <br> (Hover for breakdown)')
runApp()
runApp()
runApp()
bestCuisine
bestCuisine$Best
bestCuisine$Best[1]
bestP
bestCuisine$Best[1]
bestCuisine$[1]
bestCuisine[1]
bestCuisine[1,1]
runApp()
runApp()
runApp()
?imageOutput()
runApp()
?dashboardSidebar()
runApp()
runApp()
?dashboardPage
runApp()
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
runApp()
print(source('~/Desktop/New_Stuff/NEU/Semester 4/Machine Learning /Project/Project_Mark1/project_1.R')$value)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()

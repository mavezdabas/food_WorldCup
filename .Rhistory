dplyr::select(1)
library(magrittr )
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(1)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23)
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium"))
colnames(classData)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
aggregate(classData$Hours.Sleep)
aggregate(classData$Hours.Sleep,FUN = mean())
aggregate(classData, by=list(classData$Hours.Sleep,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...),
FUN=mean, na.rm=TRUE)
aggregate(classData, by=list(classData$Hours.Sleep,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...),
FUN=mean, na.rm=FALSE)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(classData$Hours.Sleep), sd=sd(classData$Hours.Sleep))
mean(classData$Hours.Sleep)
typeof(classData$Hours.Sleep)
mean(classData$Hours.Sleep)
mean(classData$Hours.Sleep,na.rm = TRUE)
mean(classData$Hours.Sleep,na.rm = FALSE)
mean(classData$Hours.Sleep)
(classData$Hours.Sleep)
mean(as.integer(classData$Hours.Sleep))
classData$Hours.Sleep <- as.integer(classData$Hours.Sleep)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(classData$Hours.Sleep))
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
typeof(classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
mean(as.integer(classData$Hours.Sleep))
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... <- as.character(classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...)
dplyr::group_by(classData, classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16) %>%
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16)
colnames(classData)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Medium") %>%
dplyr::select(23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::select(23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::group_by(classData_2, classData_2$CupSize)
typeof(classData_2$CupSize)
as.factor(classData_2$CupSize)
classData_2$CupSize <- as.factor(classData_2$CupSize)
dplyr::group_by(classData_2, classData_2$CupSize)
View(classData_2)
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
dplyr::group_by(classData_2, classData_2$CupSize)
classData_2 <- na.omit(classData_2)
dplyr::group_by(classData_2, classData_2$CupSize)
classData_2$CupSize
typeof(classData_2$CupSize)
classData_2$CupSize <- as.factor(classData_2$CupSize)
dplyr::group_by(classData_2, classData_2$CupSize)
colnames(classData_2)
aggregate(NumberOfCups ~ Hours.Sleep, data=classData_2, function(x) {sum(is.na(x))}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {sum(is.na(x))}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
filter(classData_2,classData_2$CupSize="Large")
filter(classData_2,classData_2$CupSize=="Large")
filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...=="Large")
classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large")
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
dplyr::select(23,16,15)
dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large") %>%
dplyr::select(23,16,15) %>% mean(Hours.Sleep)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
eaggregate(Hours.Sleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup <- aggregate(Hours.Sleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
View(dplyr::filter(classData,classData$Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall... == "Large"))
classData <- read.csv("/Users/mavezsinghdabas/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/HW/HW1/Data/HW1/HW1.csv")
classData_2 <- dplyr::select(classData,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
classData_2 <- na.omit(classData_2)
View(classData_2)
dplyr::group_by(classData_2, classData_2$CupSize) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
summary(classData_2)
classData_2$Hours.Sleep
typeof(classData_2$Hours.Sleep)
as.character(classData_2$Hours.Sleep)
as.integer(classData_2$Hours.Sleep)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dplyr::group_by(classData_2, classData_2$CupSize) %>%
summarise(mean=mean(as.integer(classData$Hours.Sleep)))
levels(droplevels(classData_2$Hours.Sleep))
mean(levels(droplevels(classData_2$Hours.Sleep)))
stringsAsFactors=FALSE
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
mean(classData_2$Hours.Sleep)
mean(as.character(classData_2$Hours.Sleep))
mean(as.character.Date(classData_2$Hours.Sleep))
library(chron)
times(classData_2$Hours.Sleep)
ch <- times(classData_2$Hours.Sleep)
60 * hours(ch) + minutes(ch)
classData_2$minutesSleep <- 60 * hours(ch) + minutes(ch)
aggregate(Hours.Sleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup <- aggregate(minutesSleep ~ CupSize, data=classData_2, function(x) {mean(x)}, na.action = NULL)
dataCup
500/60
dplyr::mutate(dataCup,Hours_Sleep = dataCup$minutesSleep/60 )
View(dataCup)
dataCup <- dplyr::mutate(dataCup,Hours_Sleep = dataCup$minutesSleep/60 )
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
round(dataCup$minutesSleep/60 )
round(dataCup$minutesSleep/60,2)
dataCup <- dplyr::mutate(dataCup,Hours_Sleep = round(dataCup$minutesSleep/60,2))
write.csv(dataCup,"DataCup.csv",row.names = FALSE)
aggregate(minutesSleep ~ CupSize + NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
max(classData_2$NumberOfCups)
(aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)%>%)
dataCup_2 <-aggregate(minutesSleep ~ NumberOfCups, data=classData_2, function(x) {mean(x)}, na.action = NULL)
(dataCup_2$minutesSleep/60)
colnames(classData)
classData_3 <- dplyr::select(classData,34,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
dplyr::select(classData,34,23,16,15)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
View(classData_3)
classData_3 <- na.omit(classData_3)
times(classData_3$Hours.Sleep)
ch_1 <- times(classData_3$Hours.Sleep)
classData_3$SleepMinute <- 60 * hours(ch_1) + minutes(ch_1)
colnames(classData_3)
dataCup_1 <- aggregate(SleepMinute ~ NumberOfCups, data=classData_3, function(x) {mean(x)}, na.action = NULL)
View(dataCup_2)
dataCup_1 <- dplyr::mutate(dataCup,Hours_Sleep = round(dataCup_1$SleepMinute/60,2))
dataCup_1 <- dplyr::mutate(dataCup_1,Hours_Sleep = round(dataCup_1$SleepMinute/60,2))
View(dataCup_1)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
classData_3 <- na.omit(classData_3)
ch_1 <- times(classData_3$BedTime)
classData_3$SleepMinute <- 60 * hours(ch_1) + minutes(ch_1)
classData_3 <- dplyr::select(classData,21,23,16,15) %>%
dplyr::rename(CupSize = Q32...What.size.cup.of.coffee..or.coffee.expresso.based.beverage..do.you.typicall...,
NumberOfCups = Q29...How.many.cups.of.coffee.do.you.drink.per.day.,
BedTime = Q34...What.time.do.you.typically.go.to.bed.at.night.)
hist(classData_3$NumberOfCups)
plot(classData_3$NumberOfCups,classData_3$BedTime)
View(classData)
View(dataCup_1)
colnames(classData)
View(classData)
summary(classData)
rm(list = ls())
setwd("~/Desktop/New_Stuff/NEU/Semester 4")
setwd("~/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/Project_Food/food-world-cup")
foodData <- read.csv("food-world-cup-data.csv",header = FALSE)
View(foodData)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
foodData <- read.csv("food-world-cup-data.csv",header = FALSE)
View(foodData)
foodData <- read.csv("food-world-cup-data.csv",header = FALSE)
View(foodData)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
View(foodData)
foodData$Algeria
sum(is.na(foodData$Algeria))
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
sum(is.na(foodData$Algeria))
na_count <-sapply(x, function(y) sum(length(which(is.na(foodData)))))
na_count <-sapply(foodData, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
View(na_count)
non_na_count <-sapply(foodData, function(y) sum(length(which(!is.na(y)))))
non_na_count <- data.frame(non_na_count)
View(non_na_count)
unique(foodData$Location)
(foodData$Location)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
na_count <-sapply(foodData, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
non_na_count <-sapply(foodData, function(y) sum(length(which(!is.na(y)))))
non_na_count <- data.frame(non_na_count)
foodData$Location
aggregate(,Location,x = foodData,FUN = sum)
table(foodData$Location)
library(dplyr)
View(filter(foodData,foodData$Location == "East North Central"))
foodData_ENC <- filter(foodData,foodData$Location == "East North Central"))
foodData_ENC <- filter(foodData,foodData$Location == "East North Central")
View(foodData_ENC)
foodData_ENC$India
nrow(foodData_ENC %>%
filter(India == "5"))
23/188
View(non_na_count)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
View(foodData)
colnames(foodData)
shiny::runApp('~/Desktop/New_Stuff/NEU/ResearchAssistant/Shiny_Portfolio/client')
runApp('~/Desktop/New_Stuff/NEU/ResearchAssistant/Shiny_Portfolio/client')
na_count <-sapply(foodData, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
non_na_count <-sapply(foodData, function(y) sum(length(which(!is.na(y)))))
non_na_count <- data.frame(non_na_count)
table(foodData$Location)
library(dplyr)
foodData_ENC <- filter(foodData,foodData$Location == "East North Central")
nrow(foodData_ENC %>%
filter(India == "5"))
colnames(foodData)
collist <- c(colnames(foodData))
foodData[complete.cases(mydf[collist]), collist]
foodData[complete.cases(foodData), collist]
allValues <- data.frame(foodData[complete.cases(foodData), collist])
View(allValues)
head(allValues,n = 1)
head(allValues,n = 1)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
colnames(foodData)
na_count <-sapply(foodData, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
View(na_count)
non_na_count <-sapply(foodData, function(y) sum(length(which(!is.na(y)))))
non_na_count <- data.frame(non_na_count)
library(dplyr)
library(ggplot2)
library(plyr)
table(foodData$Location)
View(data.frame(table(foodData$Location)))
locationCount <- data.frame(table(foodData$Location))
collist <- c(colnames(foodData))
allValues <- data.frame(foodData[complete.cases(foodData), collist])
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
setwd("~/Desktop/New_Stuff/NEU/Semester 4/Information Visualization/Project_Food/food-world-cup/food_WorldCup")
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
View(na_count)
levels(foodData$Location)
colnames(foodData)
knowledgeCount <- data.frame(table(foodData$Level_of_knowledge))
View(knowledgeCount)
interestCount <- data.frame(table(foodData$Interested_cuisines_world))
View(interestCount)
non_na_count
View(non_na_count)
sapply(foodData, function(y) y == "5")
sapply(foodData, function(y) sum(length(which((y == "5")))))
View(data.frame(sapply(foodData, function(y) sum(length(which((y == "5")))))))
View(data.frame(sapply(foodData, function(y) sum(length(which((y == "1")))))))
View(foodData %>%
dplyr::filter(Indian))
View(foodData %>%
dplyr::select(Indian))
View(foodData %>%
dplyr::select(India))
View(foodData %>%
dplyr::select(India) %>%
dplyr::group_by(India))
View(foodData %>%
dplyr::select(RespondentID,India) %>%
dplyr::summarise(India))
View(foodData %>%
dplyr::select(RespondentID,India))
View(foodData %>%
dplyr::select(RespondentID,India))
summary(foodData %>%
dplyr::select(RespondentID,India))
summary(foodData %>%
dplyr::select(India))
indianFood <- foodData %>%
dplyr::select(India))
indianFood <- foodData %>%
dplyr::select(India)
typeof(indianFood$India)
typeof(indianFood$India)
summary(indianFood$India)
as.factor(indianFood$India)
summary(as.factor(indianFood$India))
apply(foodData, 2, function(x)length(unique(x)))
View(data.frame(sapply(foodData, function(y) sum(length(which((y == "5")))))))
rapply(indianFood$India, function(y) sum(length(unique(y))))
typeof(indianFood$India)
rapply(indianFood, function(y) sum(length(unique(y))))
rapply(indianFood, function(y) (length(unique(y))))
rapply(indianFood, function(y) sum((unique(y))))
rapply(indianFood, function(y) sum(length((y))))
rapply(indianFood, function(y) sum(length(distinct(y))))
summary(as.factor(indianFood$India))
sapply(foodData, function(y) summary(as.factor(y)))
View(data.frame(sapply(foodData, function(y) summary(as.factor(y)))))
data.frame(sapply(foodData, function(y) summary(as.factor(y))))
rm(indianFood)
countRating <- sapply(foodData, function(y) summary(as.factor(y)))
countRating
countRating[1]
countRating[2]
countRating[3]
countRating[4]
colnames(foodData)
countRating[c(4:43)]
countRating <- countRating[c(4:43)]
countRating[["5"]]
as.data.frame(countRating)
View(as.data.frame(countRating))
View(data.frame(as.data.frame(countRating)))
countRating <- as.data.frame(countRating)
View(data.frame(t(countRating))))
View(data.frame(t(countRating)))
countRating <- data.frame(t(countRating))
colnames(foodData)
boxplot(foodData$Level_of_knowledge)
typeof(foodData$Level_of_knowledge)
summary(foodData$Level_of_knowledge)
summary(foodData$Household_Income)
summary(foodData$Age)
aggregate(. ~ Age, data = foodData)
aggregate(. ~ Age, data = foodData, FUN = sum)
agePreference <- aggregate(. ~ Age, data = foodData, FUN = sum)
View(agePreference)
agePreference <- aggregate(Location ~ Age, data = foodData, FUN = sum)
agePreference <- aggregate(Location ~ Age, data = foodData, FUN = length())
agePreference <- aggregate(Location ~ Age, data = foodData, FUN = mean)
View(agePreference)
agePreference <- aggregate(. ~ Age, data = foodData, FUN = sum)
agePreference <- aggregate(count ~ Age, data = foodData, FUN = sum)
summary(foodData$Age)
agePreference <- aggregate(Education ~ Age, data = foodData, FUN = sum)
typeof(foodData$Education)
droplevels(foodData$Education)
agePreference <- aggregate(droplevels(foodData$Education) ~ Age, data = foodData, FUN = sum)
agePreference <- aggregate(droplevels(Education) ~ Age, data = foodData, FUN = sum)
summary(foodData$Age)
sapply(foodData, function(y) summary(as.factor(y)))
summaryRating <- sapply(foodData, function(y) summary(as.factor(y)))
sapply(foodData %>%
dplyr::filter(Level_of_knowledge == "Advanced"),function(y) summary(as.factor(y)))
advanceRating <- sapply(foodData %>%
dplyr::filter(Level_of_knowledge == "Advanced"),
function(y) summary(as.factor(y)))
advanceRating <- advanceRating[c(4:43)]
advanceRating <- as.data.frame(advanceRating)
advanceRating <- sapply(foodData %>%
dplyr::filter(Level_of_knowledge == "Advanced"),
function(y) summary(as.factor(y)))
advanceRating[4]
advanceRating[43]
advanceRating[44]
advanceRating <- advanceRating[c(4:43)]
advanceRating <- as.data.frame(advanceRating)
advanceRating <- as.data.frame(advanceRating,check.names = TRUE)
advanceRating <- as.data.frame(advanceRating,check.names = FALSE)
advanceRating <- as.data.frame(advanceRating,na.rm = TRUE)
advanceRating <- as.data.frame(rating = unlist(advanceRating))
advanceRating <- data.frame(rating = unlist(advanceRating))
View(advanceRating)
advanceRating <- data.frame(t(advanceRating))
View(advanceRating)
advanceRating <- data.frame(rating = unlist(advanceRating))
View(advanceRating)
advanceRating <- sapply(foodData %>%
dplyr::filter(Level_of_knowledge == "Advanced"),
function(y) summary(as.factor(y)))
advanceRating <- advanceRating[c(4:43)]
advanceRating <- data.frame(rating = unlist(advanceRating))
advanceRating <- sapply(foodData %>%
dplyr::filter(Level_of_knowledge == "Advanced"),
function(y) summary(as.factor(y)))
advanceRating <- advanceRating[c(4:43)]
advanceRating[1]
advanceRating[[1]
advanceRating[[1]]
advanceRating[[[1]]]
advanceRating[[1]]
unlist(advanceRating[[1]])
unlist(advanceRating[c(1,40])
unlist(advanceRating[c(1,40)])
(advanceRating[c(1,40)])
(advanceRating[c(1:40)])
advanceRating[1]
advanceRating[1][1]
advanceRating[[1]]
advanceRating[1]
advanceRating[[2]]
advanceRating$Algeria[1]
advanceRating$Algeria
colnames(advanceRating)
lapply(advanceRating, `[[`, 1)
lapply(advanceRating, `[`, 1)
lapply(advanceRating, `[`, )
lapply(advanceRating, `$`, 1)
lapply(advanceRating, `[[`, $)
1
lapply(advanceRating, `[[`, 1)
unique(rapply(advanceRating, function(x) head(x, 1)))
(rapply(advanceRating, function(x) head(x, 1)))
(rapply(advanceRating, function(x) x))
advanceRating$c(1)
matrix(unlist(advanceRating),ncol=2,byrow=TRUE)
matrix(unlist(advanceRating),ncol=3,byrow=TRUE)
advanceRating <- data.frame(Name = (advanceRating))
advanceRating <- data.frame(Name = unlist(advanceRating))
View(advanceRating)
advanceRating$Food <- rownames(advanceRating)
strsplit(advanceRating$Food, ".")
advanceRating$Food[1]
strsplit(advanceRating$Food[1], ".")
strsplit(advanceRating$Food[1], " ")
strsplit(advanceRating$Food[1], ".")
read.table(text = advanceRating$Food, sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[1], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:2)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:227)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:20)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:3)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:5)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:4)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:5)], sep = ".", colClasses = "character")
read.table(text = advanceRating$Food[c(1:4)], sep = ".", colClasses = "character")
strsplit(gsub("[^=;]+=", "", advanceRating$Food), ";")[[1]]
strsplit(gsub("[^=;]+=", "", advanceRating$Food), ";")
strsplit(gsub("[^=;]+=", "", advanceRating$Food), ";")[[1]]
strsplit(gsub("[^=;]+=", "", advanceRating$Food), ".")[[1]]
strsplit(gsub("[^=;]+=", "", advanceRating$Food), " .")[[1]]
strsplit(gsub(., "", advanceRating$Food), ".")[[1]]
strsplit(gsub(., "", advanceRating$Food))[[1]]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))[1]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))[[1]]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))[[c(1,227]]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))[[c(1,227)]]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))[[1]]
sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))
as.data.frame(sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x))))
rating <- as.data.frame(sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x))))
View(rating)
rating <- as.data.frame(rat = sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x))))
rating <- as.data.frame(sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x))))
View(rating)
advanceRating$Rating <- rating$`sapply(advanceRating$Food, function(x) substr(x, nchar(x), nchar(x)))`
View(advanceRating %>%
dplyr::filter(Rating != "s"))
advanceRating <- advanceRating %>%
dplyr::filter(Rating != "s")
summary(advanceRating$Rating)
library(dplyr)
library(ggplot2)
library(plyr)
foodData <- read.csv("food-world-cup-data.csv",header = TRUE)
colnames(foodData)
na_count <-sapply(foodData, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
View(na_count)
non_na_count <-sapply(foodData, function(y) sum(length(which(!is.na(y)))))
non_na_count <- data.frame(non_na_count)
locationCount <- data.frame(table(foodData$Location))
View(locationCount)
knowledgeCount <- data.frame(table(foodData$Level_of_knowledge))
View(knowledgeCount)
interestCount <- data.frame(table(foodData$Interested_cuisines_world))
View(interestCount)
collist <- c(colnames(foodData))
allValues <- data.frame(foodData[complete.cases(foodData), collist])
View(allValues)
View(data.frame(sapply(foodData, function(y) sum(length(which((y == "5")))))))
View(foodData)
View(knowledgeCount)
View(foodData)
